/*
    Задача о коллекции функций: у вас есть массив функций, напишите код, который вызовет
    каждую функцию в этом массиве и выведет их порядковый номер. Однако, вызов каждой функции
    должен происходить только после вызова предыдущей функции.
    Другими словами, нужно выполнить следующие шаги:
       * Вызвать первую функцию из массива.
       * После завершения работы первой функции вызвать вторую функцию.
       * После завершения работы второй функции вызвать третью функцию.
       * И так далее, пока все функции в массиве не будут вызваны по порядку.
*/

export const callFuncArray = async (funcArray) => {  // т.к. передаваемые ф-и могут быть асинхронными, используем асинхронную ф-ю
    for (let i = 0; i < funcArray.length; i++) {  // для всех ф-й из массива
        await funcArray[i]();  // вызываем ф-ю, ждем её завершения
        console.log(i + 1);  // выводим порядковый номер ф-и
    }
}

callFuncArray([
    () => new Promise((resolve) => setTimeout(() => {console.log('foo_01'); resolve()}, 200)),
    () => new Promise((resolve) => setTimeout(() => {console.log('foo_02'); resolve()}, 1000)),
    () => new Promise((resolve) => setTimeout(() => {console.log('foo_03'); resolve()}, 12)),
    () => new Promise((resolve) => setTimeout(() => {console.log('foo_04'); resolve()}, 5000)),
    () => new Promise((resolve) => setTimeout(() => {console.log('foo_05'); resolve()}, 200)),
]);

